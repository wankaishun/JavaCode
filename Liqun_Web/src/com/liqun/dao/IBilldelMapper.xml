<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liqun.dao.IBilldelMapper" >
  <resultMap id="BaseResultMap" type="com.liqun.entity.IBilldel" >
    <result column="QYBH" property="qybh" jdbcType="VARCHAR" />
    <result column="FPTQM" property="fptqm" jdbcType="VARCHAR" />
    <result column="FPLSH" property="fplsh" jdbcType="VARCHAR" />
    <result column="PFHH" property="pfhh" jdbcType="INTEGER" />
    <result column="XMMC" property="xmmc" jdbcType="VARCHAR" />
    <result column="SPBM" property="spbm" jdbcType="VARCHAR" />
    <result column="SPBH" property="spbh" jdbcType="VARCHAR" />
    <result column="GGXH" property="ggxh" jdbcType="VARCHAR" />
    <result column="JLDW" property="jldw" jdbcType="VARCHAR" />
    <result column="XMSL" property="xmsl" jdbcType="DECIMAL" />
    <result column="XMDJ" property="xmdj" jdbcType="DECIMAL" />
    <result column="XMJE" property="xmje" jdbcType="DECIMAL" />
    <result column="SL" property="sl" jdbcType="DECIMAL" />
    <result column="SE" property="se" jdbcType="DECIMAL" />
    <result column="HSDJ" property="hsdj" jdbcType="DECIMAL" />
    <result column="HSJE" property="hsje" jdbcType="DECIMAL" />
    <result column="ZKHSJE" property="zkhsje" jdbcType="DECIMAL" />
    <result column="ZKJE" property="zkje" jdbcType="DECIMAL" />
    <result column="ZKSE" property="zkse" jdbcType="DECIMAL" />
    <result column="ZKHHSJE" property="zkhhsje" jdbcType="DECIMAL" />
    <result column="ZKHJE" property="zkhje" jdbcType="DECIMAL" />
    <result column="ZKHSE" property="zkhse" jdbcType="DECIMAL" />
    <result column="SFYHZC" property="sfyhzc" jdbcType="INTEGER" />
    <result column="YHZCNR" property="yhzcnr" jdbcType="VARCHAR" />
    <result column="LSLBS" property="lslbs" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    QYBH, FPTQM, FPLSH, PFHH, XMMC, SPBM, SPBH, GGXH, JLDW, XMSL, XMDJ, XMJE, SL, SE, 
    HSDJ, HSJE, ZKHSJE, ZKJE, ZKSE, ZKHHSJE, ZKHJE, ZKHSE, SFYHZC, YHZCNR, LSLBS
  </sql>
  <select id="getIBilldel" resultMap="BaseResultMap">
   select <include refid="Base_Column_List" />
   from i_billdel 
  	<where>
		<if test="fplsh != null and fplsh != ''">
<!-- 		and fplsh like concat('%',replace(replace(#{fplsh}, '_', '\_'),'%', '\%'), '%') --> 
			and fplsh=#{fplsh}
     	</if>
      </where>
		limit
		#{p.offset}, #{p.size}
   </select>
   <select id="countAll" resultType="long" >
   select count(*) from i_billdel 
  	<where>
		<if test="fplsh != null and fplsh != ''">
		and fplsh like concat('%',replace(replace(#{fplsh}, '_', '\_'),'%', '\%'), '%')
      	</if>
      </where>
   </select>
    <select id="getBilldelBy" resultType="com.htxx.pojo.i_billdel" parameterType="com.liqun.dto.lqinput.searchbill.Input">
   select <include refid="Base_Column_List" />
   from i_billdel 
   where fptqm=#{tqm,jdbcType=VARCHAR} and 
   	fplsh=#{lsh,jdbcType=VARCHAR}
   </select>
   
    <select id="getBilldeList" resultMap="BaseResultMap" parameterType="java.util.Map">
   select <include refid="Base_Column_List" />
   from i_billdel 
   where 1=1 and 
   	fplsh=#{fplsh,jdbcType=VARCHAR}
   </select>
   
   
   <select id="getBilldelMerge" parameterType="java.util.Map" resultMap="BaseResultMap">
   <!-- 按同商品名称、同单价合并 -->
   	<if test="type == 0" >
     select QYBH, CONCAT(FPTQM,'-') FPTQM, CONCAT(FPLSH,'-') FPLSH, PFHH, XMMC, SPBM, SPBH, GGXH, JLDW, sum(XMJE)/XMDJ AS XMSL,  XMDJ, sum(XMJE) XMJE, sum(SE)/ sum(XMJE) AS SL, sum(SE) SE, 
     HSDJ, SUM(HSJE) HSJE, SUM(ZKHSJE) ZKHSJE, SUM(ZKJE) ZKJE, SUM(ZKSE) ZKSE, SUM(ZKHHSJE) ZKHHSJE, SUM(ZKHJE) ZKHJE, SUM(ZKHSE) ZKHSE, SFYHZC, YHZCNR, LSLBS
     from  i_billdel 
     <where>  
         fplsh 
         <foreach  collection="fplshs" item="item" open="in (" close=")" separator=",">   
             #{item}  
         </foreach>  
     </where>
      GROUP BY xmmc,XMDJ
     </if>
     <!-- 按同商品名称、同单价、同税率合并 -->
     <if test="type == 1" >
    select QYBH, CONCAT(FPTQM,'-') FPTQM, CONCAT(FPLSH,'-') FPLSH, PFHH, XMMC, SPBM, SPBH, GGXH, JLDW, sum(XMJE)/XMDJ AS XMSL,  XMDJ, sum(XMJE) XMJE, SL, sum(SE) SE, 
    HSDJ, SUM(HSJE) HSJE, SUM(ZKHSJE) ZKHSJE, SUM(ZKJE) ZKJE, SUM(ZKSE) ZKSE, SUM(ZKHHSJE) ZKHHSJE, SUM(ZKHJE) ZKHJE, SUM(ZKHSE) ZKHSE, SFYHZC, YHZCNR, LSLBS
 	from  i_billdel
 	<where>  
         fplsh 
         <foreach  collection="fplshs" item="item" open="in (" close=")" separator=",">   
             #{item}  
         </foreach>  
     </where>
 	 GROUP BY xmmc,XMDJ,sl
     </if>
     <!-- 税率 -->
     <if test="type == 2" >
    select QYBH, CONCAT(FPTQM,'-') FPTQM, CONCAT(FPLSH,'-') FPLSH, PFHH, XMMC, SPBM, SPBH, GGXH, JLDW, sum(XMJE)/XMDJ AS XMSL,  XMDJ, sum(XMJE) XMJE, SL, sum(SE) SE, 
    HSDJ, SUM(HSJE) HSJE, SUM(ZKHSJE) ZKHSJE, SUM(ZKJE) ZKJE, SUM(ZKSE) ZKSE, SUM(ZKHHSJE) ZKHHSJE, SUM(ZKHJE) ZKHJE, SUM(ZKHSE) ZKHSE, SFYHZC, YHZCNR, LSLBS
 	from  i_billdel 
	<where>  
         fplsh 
         <foreach  collection="fplshs" item="item" open="in (" close=")" separator=",">   
             #{item}  
         </foreach>  
     </where>
	GROUP BY sl
     </if>
     <!-- 按同商品名称、同单价、同规格型号合并 -->
     <if test="type == 3" >
    select QYBH,CONCAT(FPTQM,'-') FPTQM, CONCAT(FPLSH,'-') FPLSH, PFHH, XMMC, SPBM, SPBH, GGXH, JLDW, sum(XMJE)/XMDJ AS XMSL,  XMDJ, sum(XMJE) XMJE, sum(SE)/ sum(XMJE) AS SL, sum(SE) SE, 
    HSDJ, SUM(HSJE) HSJE, SUM(ZKHSJE) ZKHSJE, SUM(ZKJE) ZKJE, SUM(ZKSE) ZKSE, SUM(ZKHHSJE) ZKHHSJE, SUM(ZKHJE) ZKHJE, SUM(ZKHSE) ZKHSE, SFYHZC, YHZCNR, LSLBS
 	from  i_billdel 
	<where>  
         fplsh 
         <foreach  collection="fplshs" item="item" open="in (" close=")" separator=",">   
             #{item}  
         </foreach>  
     </where>
 	GROUP BY xmmc,XMDJ,GGXH
     </if>
   </select>
   <insert id="insertBilldelList">
   		insert  into i_billdel (QYBH, FPTQM, FPLSH, 
		      PFHH, XMMC, SPBM, SPBH, 
		      GGXH, JLDW, XMSL, XMDJ, 
		      XMJE, SL, SE, HSDJ, 
		      HSJE, ZKHSJE, ZKJE, 
		      ZKSE, ZKHHSJE, ZKHJE, 
		      ZKHSE, SFYHZC, YHZCNR, 
		      LSLBS) values
		<foreach collection="list" item="item" index="index" separator="," >  
        (#{item.qybh},#{item.fptqm},#{item.fplsh},#{item.pfhh},#{item.xmmc},
        #{item.spbm},#{item.spbh},#{item.ggxh},#{item.jldw},#{item.xmsl},
        #{item.xmdj},#{item.xmje},#{item.sl},#{item.se},#{item.hsdj}
        ,#{item.hsje},#{item.zkhsje},#{item.zkje},#{item.zkse},#{item.zkhhsje},
        #{item.zkhje},#{item.zkhse},#{item.sfyhzc},#{item.yhzcnr},#{item.lslbs})  
    	</foreach>  
   </insert>
  <insert id="insert" parameterType="com.liqun.entity.IBilldel" >
    insert into i_billdel (QYBH, FPTQM, FPLSH, 
      PFHH, XMMC, SPBM, SPBH, 
      GGXH, JLDW, XMSL, XMDJ, 
      XMJE, SL, SE, HSDJ, 
      HSJE, ZKHSJE, ZKJE, 
      ZKSE, ZKHHSJE, ZKHJE, 
      ZKHSE, SFYHZC, YHZCNR, 
      LSLBS)
    values (#{qybh,jdbcType=VARCHAR}, #{fptqm,jdbcType=VARCHAR}, #{fplsh,jdbcType=VARCHAR}, 
      #{pfhh,jdbcType=INTEGER}, #{xmmc,jdbcType=VARCHAR}, #{spbm,jdbcType=VARCHAR}, #{spbh,jdbcType=VARCHAR}, 
      #{ggxh,jdbcType=VARCHAR}, #{jldw,jdbcType=VARCHAR}, #{xmsl,jdbcType=DECIMAL}, #{xmdj,jdbcType=DECIMAL}, 
      #{xmje,jdbcType=DECIMAL}, #{sl,jdbcType=DECIMAL}, #{se,jdbcType=DECIMAL}, #{hsdj,jdbcType=DECIMAL}, 
      #{hsje,jdbcType=DECIMAL}, #{zkhsje,jdbcType=DECIMAL}, #{zkje,jdbcType=DECIMAL}, 
      #{zkse,jdbcType=DECIMAL}, #{zkhhsje,jdbcType=DECIMAL}, #{zkhje,jdbcType=DECIMAL}, 
      #{zkhse,jdbcType=DECIMAL}, #{sfyhzc,jdbcType=INTEGER}, #{yhzcnr,jdbcType=VARCHAR}, 
      #{lslbs,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.liqun.entity.IBilldel" >
    insert into i_billdel
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="qybh != null" >
        QYBH,
      </if>
      <if test="fptqm != null" >
        FPTQM,
      </if>
      <if test="fplsh != null" >
        FPLSH,
      </if>
      <if test="pfhh != null" >
        PFHH,
      </if>
      <if test="xmmc != null" >
        XMMC,
      </if>
      <if test="spbm != null" >
        SPBM,
      </if>
      <if test="spbh != null" >
        SPBH,
      </if>
      <if test="ggxh != null" >
        GGXH,
      </if>
      <if test="jldw != null" >
        JLDW,
      </if>
      <if test="xmsl != null" >
        XMSL,
      </if>
      <if test="xmdj != null" >
        XMDJ,
      </if>
      <if test="xmje != null" >
        XMJE,
      </if>
      <if test="sl != null" >
        SL,
      </if>
      <if test="se != null" >
        SE,
      </if>
      <if test="hsdj != null" >
        HSDJ,
      </if>
      <if test="hsje != null" >
        HSJE,
      </if>
      <if test="zkhsje != null" >
        ZKHSJE,
      </if>
      <if test="zkje != null" >
        ZKJE,
      </if>
      <if test="zkse != null" >
        ZKSE,
      </if>
      <if test="zkhhsje != null" >
        ZKHHSJE,
      </if>
      <if test="zkhje != null" >
        ZKHJE,
      </if>
      <if test="zkhse != null" >
        ZKHSE,
      </if>
      <if test="sfyhzc != null" >
        SFYHZC,
      </if>
      <if test="yhzcnr != null" >
        YHZCNR,
      </if>
      <if test="lslbs != null" >
        LSLBS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="qybh != null" >
        #{qybh,jdbcType=VARCHAR},
      </if>
      <if test="fptqm != null" >
        #{fptqm,jdbcType=VARCHAR},
      </if>
      <if test="fplsh != null" >
        #{fplsh,jdbcType=VARCHAR},
      </if>
      <if test="pfhh != null" >
        #{pfhh,jdbcType=INTEGER},
      </if>
      <if test="xmmc != null" >
        #{xmmc,jdbcType=VARCHAR},
      </if>
      <if test="spbm != null" >
        #{spbm,jdbcType=VARCHAR},
      </if>
      <if test="spbh != null" >
        #{spbh,jdbcType=VARCHAR},
      </if>
      <if test="ggxh != null" >
        #{ggxh,jdbcType=VARCHAR},
      </if>
      <if test="jldw != null" >
        #{jldw,jdbcType=VARCHAR},
      </if>
      <if test="xmsl != null" >
        #{xmsl,jdbcType=DECIMAL},
      </if>
      <if test="xmdj != null" >
        #{xmdj,jdbcType=DECIMAL},
      </if>
      <if test="xmje != null" >
        #{xmje,jdbcType=DECIMAL},
      </if>
      <if test="sl != null" >
        #{sl,jdbcType=DECIMAL},
      </if>
      <if test="se != null" >
        #{se,jdbcType=DECIMAL},
      </if>
      <if test="hsdj != null" >
        #{hsdj,jdbcType=DECIMAL},
      </if>
      <if test="hsje != null" >
        #{hsje,jdbcType=DECIMAL},
      </if>
      <if test="zkhsje != null" >
        #{zkhsje,jdbcType=DECIMAL},
      </if>
      <if test="zkje != null" >
        #{zkje,jdbcType=DECIMAL},
      </if>
      <if test="zkse != null" >
        #{zkse,jdbcType=DECIMAL},
      </if>
      <if test="zkhhsje != null" >
        #{zkhhsje,jdbcType=DECIMAL},
      </if>
      <if test="zkhje != null" >
        #{zkhje,jdbcType=DECIMAL},
      </if>
      <if test="zkhse != null" >
        #{zkhse,jdbcType=DECIMAL},
      </if>
      <if test="sfyhzc != null" >
        #{sfyhzc,jdbcType=INTEGER},
      </if>
      <if test="yhzcnr != null" >
        #{yhzcnr,jdbcType=VARCHAR},
      </if>
      <if test="lslbs != null" >
        #{lslbs,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>